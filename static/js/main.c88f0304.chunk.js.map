{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","robots.js","components/Scroll.js","containers/App.js","serviceWorker.js","index.js"],"names":["card","props","name","email","id","className","style","width","alt","src","CardList","robots","map","user","i","Card","key","SearchBox","searchfield","searchChange","type","placeholder","outline","height","fontSize","onChange","username","Scroll","class","overflowY","border","children","App","onSearchChange","event","setState","target","value","state","filteredRobots","this","filter","toLowerCase","includes","length","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wOAiBeA,EAfF,SAACC,GAAW,IACbC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,MAAOC,EAAOH,EAAPG,GACrB,OACI,yBAAKC,UAAU,sDAAqDC,MAAO,CAACC,MAAO,UAC/E,yBAAKC,IAAMP,EAAMG,GAAIK,IAAG,+BAA0BL,GAAKE,MAAO,CAACC,MAAO,WACtE,6BACI,4BAAKL,GACL,2BAAIC,MCaLO,EAnBG,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACjB,OACI,6BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,kBAACC,EAAD,CACIC,IAAKF,EACLV,GAAIO,EAAOG,GAAGV,GACdF,KAAMS,EAAOG,GAAGZ,KAChBC,MAAOQ,EAAOG,GAAGX,aCE9Bc,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OACI,yBAAKd,UAAU,OACX,2BACIA,UAAU,mCAAmCe,KAAK,SAClDC,YAAY,mBACZf,MAAO,CAACgB,QAAS,OAAQC,OAAQ,OAAQC,SAAU,UACnDC,SAAUN,MCTbR,EAAS,CAClB,CACIP,GAAI,EACJF,KAAM,YACNwB,SAAU,MACVvB,MAAO,oBAEX,CACIC,GAAI,EACJF,KAAM,cACNwB,SAAU,YACVvB,MAAO,wBAEX,CACIC,GAAI,EACJF,KAAM,mBACNwB,SAAU,WACVvB,MAAO,wBAEX,CACIC,GAAI,EACJF,KAAM,mBACNwB,SAAU,YACVvB,MAAO,6BAEX,CACIC,GAAI,EACJF,KAAM,eACNwB,SAAU,OACVvB,MAAO,mBAEX,CACIC,GAAI,GACJF,KAAM,mBACNwB,SAAU,SACVvB,MAAO,4BAEX,CACIC,GAAI,EACJF,KAAM,uBACNwB,SAAU,mBACVvB,MAAO,2BAEX,CACIC,GAAI,EACJF,KAAM,kBACNwB,SAAU,eACVvB,MAAO,0BAEX,CACIC,GAAI,EACJF,KAAM,2BACNwB,SAAU,gBACVvB,MAAO,wBAEX,CACIC,GAAI,EACJF,KAAM,kBACNwB,SAAU,WACVvB,MAAO,2BAEX,CACIC,GAAI,GACJF,KAAM,qBACNwB,SAAU,iBACVvB,MAAO,2BCtDAwB,EARA,SAAC1B,GACZ,OACI,yBAAK2B,MAAO,gBAAgBtB,MAAO,CAACuB,UAAW,SAAUC,OAAQ,kBAAmBP,OAAQ,UACvFtB,EAAM8B,WCsCJC,E,kDAjCX,aAAgB,IAAD,8BACX,gBAOJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEjB,YAAagB,EAAME,OAAOC,SAP1C,EAAKC,MAAQ,CACT3B,OAAQA,EACRO,YAAa,IAJN,E,qDAYL,IAAD,OACCqB,EAAiBC,KAAKF,MAAM3B,OAAO8B,QAAO,SAAA9B,GAC5C,OAAOA,EAAOT,KAAKwC,cAAcC,SAAS,EAAKL,MAAMpB,YAAYwB,kBAErE,OAAiC,IAA7BF,KAAKF,MAAM3B,OAAOiC,OACX,0CAGH,yBAAKvC,UAAU,MACX,wBAAIA,UAAU,MAAd,eACA,kBAAC,EAAD,CAAWc,aAAcqB,KAAKP,iBAC9B,kBAAC,EAAD,KACA,kBAAC,EAAD,CAAUtB,OAAQ4B,U,GAzBpBM,aCEEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCTNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.c88f0304.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst card = (props) => {\r\n    const { name, email, id } = props;\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'style={{width: '180px'}}>\r\n            <img alt= {props.id} src={`https://robohash.org/${id}`}style={{width: '180px'}} />\r\n            <div>\r\n                <h3>{name}</h3>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// visit auto-robots generator site https://robohash.org/test \r\n\r\nexport default card;\r\n\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\n const CardList = ({ robots }) => {\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return (\r\n                        <Card \r\n                            key={i}\r\n                            id={robots[i].id} \r\n                            name={robots[i].name} \r\n                            email={robots[i].email}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n                className='pa2 ba b--green bg-lightest-blue' type='search' \r\n                placeholder='search robots...' \r\n                style={{outline: \"none\", height: '2rem', fontSize: '0.9rem'}} \r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","export const robots = [\r\n    {\r\n        id: 1, \r\n        name: 'Joseph tg',\r\n        username: 'jtg',\r\n        email: 'josetg@gmail.com'\r\n    },\r\n    {\r\n        id: 2, \r\n        name: 'Ervin Howel',\r\n        username: 'Antonette',\r\n        email: 'Antonette@melissa.tv'\r\n    },\r\n    {\r\n        id: 3, \r\n        name: 'Clemantine Bauch',\r\n        username: 'Samantha',\r\n        email: 'samantha@yesenia.net'\r\n    },\r\n    {\r\n        id: 4, \r\n        name: 'Patricia Lebsack',\r\n        username: 'Karrianne',\r\n        email: 'Juliane.0connect@kory.org'\r\n    },\r\n    {\r\n        id: 5,\r\n        name: 'Leanne Grahm',\r\n        username: 'Blet',\r\n        email: 'sincerapril.biz'\r\n    },\r\n    {\r\n        id: 11,\r\n        name: 'Chelsey Dietrich',\r\n        username: 'Kamren',\r\n        email: 'Lucio_Hettinger@annie.ca'\r\n    },\r\n    {\r\n        id: 6,\r\n        name: 'Mrs. Dennis Schulist',\r\n        username: 'Leopoldo_Corkery',\r\n        email: 'Karley_Dach@jasper.info'\r\n    },\r\n    {\r\n        id: 7,\r\n        name: 'Kurtis Weissnat',\r\n        username: 'Elwyn.Skiles',\r\n        email: 'Telly.Hoeger@billy.biz'\r\n    },\r\n    {\r\n        id: 8,\r\n        name: 'Nicholas Runolfsdottir V',\r\n        username: 'Maxime_Nienow',\r\n        email: 'Sherwood@rosamond.me'\r\n    },\r\n    {\r\n        id: 9,\r\n        name: 'Glenna Reichert',\r\n        username: 'Delphine',\r\n        email: 'Chaim_McDermott@dana.io'\r\n    },\r\n    {\r\n        id: 10,\r\n        name: 'Clementina DuBuque',\r\n        username: 'Moriah.Stanton',\r\n        email: 'Rey.Padberg@karina.biz'\r\n    }\r\n]","import React from 'react';\r\nimport '../containers/app.css';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div class= 'hideScrollBar' style={{overflowY: 'scroll', border: '1px solid black', height: '400px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;\r\n\r\n\r\n// Props, State, Children:","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from  '../components/SearchBox';\r\nimport { robots } from '../robots';\r\nimport Scroll from '../components/Scroll';\r\nimport './app.css';\r\n\r\n// STATE => a description of your app STATE >> PROPS\r\n\r\n\r\nclass App extends Component {\r\n    constructor () {\r\n        super()\r\n        this.state = {\r\n            robots: robots,\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n    }\r\n\r\n    render() {\r\n        const filteredRobots = this.state.robots.filter(robots =>{\r\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        })\r\n        if (this.state.robots.length === 0) {\r\n            return <h1>Loading...</h1>\r\n        } else {\r\n            return (\r\n                <div className='tc'>\r\n                    <h1 className=\"f2\">RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                    <CardList robots={filteredRobots} />\r\n                    </Scroll>\r\n                </div>\r\n             );\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './containers/app.css'\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n \n\nReactDOM.render(<App />, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}